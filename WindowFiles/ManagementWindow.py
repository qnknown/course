# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Management.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox

from Modules.applicantsWindowModule import ApplicantsWindow
from Modules.departmentWindowModule import DepartmentWindow
from Modules.resultWindowModule import ResultWindow
from Modules.usersWindowModule import UsersWindow
from Modules.facultyWindowModule import FacultyWindow
from Modules.examWindowModule import ExamWindow
from Modules.groupWindowModule import GroupWindow
from Modules.relationWindowModule import RelationWindow
from Modules.specWindowModule import SpecWindow
from Modules.subjectWindowModule import SubjectsWindow
from Modules.teacherWindowModule import TeachersWindow
from Modules.queryWindowModule import QueryWindow

from Services.login_logic import DatabaseConnection

import globals

import pymysql


class Ui_Management(object):
    def setupUi(self, Management):
        Management.setObjectName("Management")
        Management.resize(1000, 700)
        Management.setStyleSheet("background: #5472DE;\n"
"background-image: url(:/newPrefix/649eb8ca76c20 (1).png);")
        self.centralwidget = QtWidgets.QWidget(Management)
        self.centralwidget.setObjectName("centralwidget")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(160, 10, 741, 111))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setAutoFillBackground(False)
        self.label_3.setStyleSheet("background: transparent;")
        self.label_3.setTextFormat(QtCore.Qt.AutoText)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(150, 100, 741, 80))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setAutoFillBackground(False)
        self.label_4.setStyleSheet("background: transparent;")
        self.label_4.setTextFormat(QtCore.Qt.AutoText)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(160, 180, 271, 231))
        self.widget.setStyleSheet("image: url(:/newPrefix/symvolika-1.png);\n"
"background: transparent;")
        self.widget.setObjectName("widget")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(110, 420, 371, 211))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.textBrowser.setFont(font)
        self.textBrowser.setStyleSheet("background: transparent;\n"
"border: none;")
        self.textBrowser.setObjectName("textBrowser")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(600, 270, 241, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setAutoFillBackground(False)
        self.label_5.setStyleSheet("background: transparent;")
        self.label_5.setTextFormat(QtCore.Qt.AutoText)
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(580, 340, 291, 51))
        self.comboBox.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.comboBox.setObjectName("comboBox")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(620, 440, 221, 71))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.pushButton.setObjectName("pushButton")
        Management.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(Management)
        self.statusbar.setObjectName("statusbar")
        Management.setStatusBar(self.statusbar)
        self.queryButton = QtWidgets.QPushButton(self.centralwidget)
        self.queryButton.setGeometry(QtCore.QRect(620, 530, 221, 71))  # Позиція під існуючою кнопкою
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.queryButton.setFont(font)
        self.queryButton.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.queryButton.setObjectName("queryButton")

        # Add the menu bar
        self.menubar = Management.menuBar()
        self.aboutMenu = self.menubar.addMenu('Меню')
        self.aboutAction = QtWidgets.QAction('Про доступи', Management)
        self.aboutMenu.addAction(self.aboutAction)

        self.retranslateUi(Management)
        QtCore.QMetaObject.connectSlotsByName(Management)
        self.connection = DatabaseConnection.get_connection()
        self.loadTables()
        self.pushButton.clicked.connect(self.openApp)
        self.queryButton.clicked.connect(self.openQuery)

        # Connect the menu action to the function
        self.aboutAction.triggered.connect(self.showAccessInfo)

    def showAccessInfo(self):
            # Create and display the message box with the updated text
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Information)
            msg.setText("<b>Що означає ваш рівень доступу:</b><br>"
                        "<b>Common</b> - ви маєте право лише на перегляд таблиць та виконання запитів до БД<br>"
                        "<b>Operator</b> - ви маєте право редагувати дані в таблицях<br>"
                        "<b>Admin</b> - ви маєте право додавати та редагувати юзерів<br>"
                        "<b>root</b> - ви власник БД та можете все")
            msg.setWindowTitle("Про доступи")
            msg.setStandardButtons(QMessageBox.Ok)
            msg.exec_()

    def openApp(self):
            page = self.comboBox.currentIndex()

            if page == 0:
                    self.app_window = ApplicantsWindow()
                    self.app_window.show()
            elif page == 1:
                    self.app_window = DepartmentWindow()
                    self.app_window.show()
            elif page == 2:
                    self.app_window = ResultWindow()
                    self.app_window.show()
            elif page == 3:
                    self.app_window = ExamWindow()
                    self.app_window.show()
            elif page == 4:
                    self.app_window = RelationWindow()
                    self.app_window.show()
            elif page == 5:
                    self.app_window = FacultyWindow()
                    self.app_window.show()
            elif page == 6:
                    self.app_window = GroupWindow()
                    self.app_window.show()
            elif page == 7:
                    self.app_window = UsersWindow()
                    self.app_window.show()
            elif page == 8:
                    self.app_window = SpecWindow()
                    self.app_window.show()
            elif page == 9:
                    self.app_window = SubjectsWindow()
                    self.app_window.show()
            elif page == 10:
                    self.app_window = TeachersWindow()
                    self.app_window.show()
            else: return

    def loadTables(self):
            try:
                    print(globals.username)
                    with self.connection.cursor() as cursor:
                            cursor.execute("SHOW TABLES")
                            tables = cursor.fetchall()

                            self.comboBox.clear()
                            for table in tables:
                                    self.comboBox.addItem(table[0])

            except pymysql.MySQLError as e:
                    print(f"Помилка підключення: {e}")

    def openQuery(self):
            self.app_window = QueryWindow()
            self.app_window.show()


    def retranslateUi(self, Management):
        _translate = QtCore.QCoreApplication.translate
        Management.setWindowTitle(_translate("Management", "Керування"))
        self.label_3.setText(_translate("Management", "Панель керування базою даних"))

        self.textBrowser.setHtml(_translate("Management", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">Вас вітає панель керування базою даних Приймальної комісії ЧНУ.</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">За допомогою цієї системи ви можете переглядати та <br />редагувати реєстр вступників ЧНУ, виставляти оцінки,<br />формувати рейтингові списки та виконувати запити.</span></p></body></html>"))
        self.label_5.setText(_translate("Management", "Виберіть сторінку"))
        self.pushButton.setText(_translate("Management", "Перейти"))
        self.queryButton.setText(_translate("Management", "Запити"))




